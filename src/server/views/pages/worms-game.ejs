<%- props.navigation %>

<script src="/worms/wormer.js"></script>

<div id="game" style="position: relative; padding-top: 4px;">
  <p style="color: gray; padding-left: 8px;">
    Roter Wurm: <span style="color: lightgray">WASD</span>
    <% if (props.mode === 'two') { %>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Grüner Wurm: <span style="color: lightgray">PFEILTASTEN</span>
    <% } else { %>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: lightgray">Besiege den grünen Wurm!</span>
    <% } %>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Neustart: <span style="color: lightgray">ENTER</span>
  </p>
  <div id="fullscreenToggle" style="position:absolute; top:4px; right: 0; padding-right: 4px; color: gray; text-decoration: underline; cursor: pointer;">Vollbild</div>
  <div id="board" style="max-width: min(90vw, 130vh); margin: 0 auto;"></div>
</div>

<div style="height:70px"></div>

<% if (props.mode === 'two') { %>
<script>
  window.MODE = 'two'
</script>
<% } else { %>
<script>
  window.MODE = 'one'
</script>
<% } %>

<script>
  const redResetRef = {}
  const red = createKeyboardPlayer('w', 'd', 's', 'a', redResetRef, {touchPosition: 'left'})
  let green = null
  let greenResetRef = {}
  if (window.MODE === 'two') {
    green = createKeyboardPlayer('ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft', greenResetRef, {touchPosition: 'right'})
  } else {
    green = createDemoBot()
  }

  const wormer = new Wormer(document.getElementById('board'), red, green)
  wormer.run()

  function restart() {
    wormer.run()
    redResetRef.reset()
    if (window.MODE === 'two') {
      greenResetRef.reset()
    }
  }

  window.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
      restart()
    }
  })

  // --- Fullscreen handling (toggle + auto label update) ---
  const fsBtn = document.getElementById('fullscreenToggle')
  const gameEl = document.getElementById('game')

  function isFullscreen() {
    return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement
  }

  function updateFsButton() {
    if (!fsBtn) return
    fsBtn.textContent = isFullscreen() ? 'Vollbild schließen' : 'Vollbild'
  }

  function requestFs(element) {
    if (element.requestFullscreen) {
      element.requestFullscreen()
    } else if (element.mozRequestFullScreen) { // Firefox
      element.mozRequestFullScreen()
    } else if (element.webkitRequestFullscreen) { // Chrome, Safari, Opera
      element.webkitRequestFullscreen()
    } else if (element.msRequestFullscreen) { // IE/Edge
      element.msRequestFullscreen()
    }
  }

  function exitFs() {
    if (document.exitFullscreen) {
      document.exitFullscreen()
    } else if (document.mozCancelFullScreen) {
      document.mozCancelFullScreen()
    } else if (document.webkitExitFullscreen) {
      document.webkitExitFullscreen()
    } else if (document.msExitFullscreen) {
      document.msExitFullscreen()
    }
  }

  function toggleFullscreen() {
    if (!isFullscreen()) {
      requestFs(gameEl)
    } else {
      exitFs()
    }
  }

  fsBtn.addEventListener('click', toggleFullscreen)
  ;['fullscreenchange','webkitfullscreenchange','mozfullscreenchange','MSFullscreenChange'].forEach(evt => {
    document.addEventListener(evt, updateFsButton)
  })
  updateFsButton()
</script>
