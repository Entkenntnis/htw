<script src="/wwwm/levels.js"></script>

<p id="back-button"><a href="/map">zurÃ¼ck</a></p>

<div style="max-width: 65ch; margin: 0 auto" id="intro-screen">
  <!-- pre-game stuff -->
  <div style="display: flex; justify-content: center; margin-bottom: 20px">
    <img src="/wwwm/logo.png" style="width: 100%; max-width: 400px" />
  </div>

  <div>
    <p>
      Bei diesem Spiel dreht sich alles um die deutsche Sprache! Finde zu
      gegebenen drei Buchstaben ein passendes Wort, z.B. fÃ¼r den Hinweis TRA
      passen die Antworten StraÃŸe, tragen, Mantra ... jedes Wort, das in der
      deutschen Sprache irgendwie verwendet wird.
    </p>
    <p>Schaffst du es in 15 Fragen zum Wort-MillionÃ¤r?</p>
    <button
      id="start-button"
      class="btn btn-success btn-lg"
      disabled
      style="display: block; margin: 0 auto; width: 300px"
      onclick="startGame()"
    >
      ... Spiel wird geladen ...
    </button>
  </div>
</div>
<div
  id="game-welcome"
  style="
    display: none;
    width: 360px;
    margin: 0 auto;
    margin-top: 80px;
    margin-bottom: 100px;
    position: relative;
    overflow: hidden;
    background: radial-gradient(circle at 50% 50%, #351e5b 0%, #1d0f33 70%);
    border: 3px solid rgba(0, 188, 140, 0.4);
    box-shadow:
      0 0 18px -4px #00bc8c,
      0 0 40px -8px rgb(0, 188, 140),
      0 0 70px -10px #351e5b inset;
    border-radius: 18px;
  "
>
  <div class="intro-stage">
    <img src="/wwwm/logo.png" alt="Wort-MillionÃ¤r" class="intro-logo" />
  </div>
</div>
<div
  id="main-screen"
  style="
    height: 420px;
    width: 600px;
    background-color: rgb(58, 58, 58);
    border-radius: 12px;
    display: none;
    margin: 0 auto;
    margin-top: 80px;
    position: relative;
  "
>
  <div id="counter" style="position: absolute; left: 10px; top: 10px">
    1 / 15
  </div>
  <div
    id="money"
    style="
      position: absolute;
      right: 50px;
      top: 6px;
      border: 2px solid #00bc8c;
      padding: 4px 8px;
      width: 160px;
      text-align: center;
      border-radius: 8px;
    "
  >
    1.000.000 â‚¬
  </div>
  <div style="position: absolute; right: 10px; top: 10px">
    <button onclick="endGame()" class="btn btn-sm btn-secondary">X</button>
  </div>
  <div
    id="hint"
    style="
      position: absolute;
      left: 0;
      right: 0;
      top: 100px;
      text-align: center;
      font-size: 48px;
      font-family: monospace;
      letter-spacing: 12px;
      user-select: none;
    "
  >
    TRA
  </div>
  <div
    id="tries"
    style="
      position: absolute;
      top: 250px;
      left: 0;
      right: 0;
      text-align: center;
    "
  >
    Versuch 1/3:
  </div>
  <div
    style="
      position: absolute;
      top: 250px;
      left: 0;
      right: 0;
      text-align: center;
    "
  >
    <form onsubmit="attempt(event); return false">
      <input
        style="width: 300px; font-size: 24px; font-family: monospace"
        oninput="handleInput(event)"
      /><button
        disabled
        id="submit-button"
        class="btn btn-success btn-lg"
        style="margin-left: 12px; vertical-align: 3px"
      >
        âœ“
      </button>
    </form>
  </div>
  <div
    style="
      position: absolute;
      left: 0;
      right: 0;
      text-align: center;
      bottom: 8px;
      color: gray;
    "
  >
    Finde ein deutsches Wort, dass die angezeigte Buchstabenfolge enthÃ¤lt.
  </div>
</div>
<div
  id="game-over"
  style="
    height: 420px;
    width: 600px;
    position: relative;
    margin: 0 auto;
    margin-top: 80px;
  "
>
  <div class="game-over-banner">
    <div class="game-over-backglow"></div>
    <h1 class="game-over-title" aria-label="Game Over">
      <span>G</span><span>a</span><span>m</span><span>e</span>
      <span class="gap"></span>
      <span>O</span><span>v</span><span>e</span><span>r</span>
    </h1>
    <div id="final-prize" class="final-prize" aria-live="polite"></div>
  </div>
  <div
    style="
      position: absolute;
      left: 0;
      right: 0;
      top: 340px;
      text-align: center;
    "
  >
    <button class="btn btn-primary" onclick="startGame()">
      Noch einmal spielen
    </button>
  </div>
</div>

<div style="height: 300px"></div>

<script>
  const $ = (selector) => document.querySelector(selector)
  // if search parameter nointro is set, skip the intro
  const urlParams = new URLSearchParams(window.location.search)
  const SKIP_INTRO = urlParams.get('nointro') === '1'
  const WORD_LIST =
    'https://gist.githubusercontent.com/MarvinJWendt/2f4f4154b8ae218600eb091a5706b5f4/raw/36b70dd6be330aa61cd4d4cdfda6234dcb0b8784/wordlist-german.txt'

  let words = []
  let wordLowerCaseCheck = {}

  const PRIZE_MONEY = [
    '50 â‚¬',
    '100 â‚¬',
    '200 â‚¬',
    '300 â‚¬',
    '500 â‚¬',
    '1.000 â‚¬',
    '2.000 â‚¬',
    '4.000 â‚¬',
    '8.000 â‚¬',
    '16.000 â‚¬',
    '32.000 â‚¬',
    '64.000 â‚¬',
    '125.000 â‚¬',
    '500.000 â‚¬',
    '1.000.000 â‚¬',
  ]

  let currentAudio = null

  let level = 0
  let joker = true

  let tries = 3
  let hint = ''

  window.onload = async () => {
    try {
      const response = await fetch(WORD_LIST)
      if (!response.ok)
        throw new Error(`HTTP ${response.status} â€“ ${response.statusText}`)
      const data = await response.text()
      // split by newlines and filter out empty lines
      words = data
        .split('\n')
        .map((word) => word.trim())
        .filter((word) => word !== '')
      for (const word of words) {
        wordLowerCaseCheck[word.toLowerCase()] = true
      }
      console.log('Word list loaded:', words.length, 'words')
      const startBtn = $('#start-button')
      if (startBtn) {
        startBtn.textContent = 'Spiel starten'
        startBtn.disabled = false
      }
    } catch (error) {
      console.error('Error loading word list:', error)
    }
  }

  function playAudio(path, offset, loop = false) {
    if (currentAudio) {
      currentAudio.pause()
      currentAudio = null
    }
    // play sound
    const audio = new Audio(path)
    if (offset) {
      audio.currentTime = offset
    }
    if (loop) {
      audio.loop = true
    }
    audio.play().catch((error) => {
      console.error('Error playing audio:', error)
    })
    currentAudio = audio
  }

  function startGame() {
    $('#game-over').style.display = 'none'
    $('#intro-screen').style.display = 'none'
    $('#game-welcome').style.display = 'block'
    $('#back-button').style.display = 'none'
    // play sound
    const audio = new Audio('/wwwm/start.mp3')
    if (!SKIP_INTRO) {
      audio.play()
    }
    setTimeout(
      () => {
        // TODO - a good place for expensive preanalysis

        $('#game-welcome').style.display = 'none'
        $('#main-screen').style.display = 'block'
        level = 0
        joker = true
        startLevel()
      },
      SKIP_INTRO ? 0 : 15000
    ) // 20 seconds for the intro sequence
  }

  function startLevel() {
    playAudio('/wwwm/easy.mp3', 8.62, true)
    $('#money').textContent = PRIZE_MONEY[level]
    $('#counter').textContent = `${level + 1} / 15`
    tries = 3
    const levelData = levels.levels[level]
    hint = levelData[Math.floor(Math.random() * levelData.length)]
    $('#hint').textContent = hint.toUpperCase()
    // reset input field
    const input = $('#main-screen input')
    input.value = ''
    input.disabled = false
    input.focus()
    const button = $('#submit-button')
    button.disabled = true
    $('#tries').textContent = `Versuch ${4 - tries}/3:`
  }

  const handleInput = (event) => {
    const input = event.target
    const button = $('#submit-button')
    const value = input.value.trim().toLowerCase()
    if (input.value.trim().toLowerCase().includes(hint.toLowerCase())) {
      button.disabled = false
    } else {
      button.disabled = true
    }
  }

  function attempt(event) {
    event.preventDefault()
    const input = $('#main-screen input')
    const value = input.value.trim().toLowerCase()
    if (!value.includes(hint.toLowerCase())) {
      return // ignore
    }
    const isCorrect = wordLowerCaseCheck[value.toLowerCase()]
    // alert(`Dein Wort: ${value.toUpperCase()}`)
    if (isCorrect) {
      alert('richtig! ðŸŽ‰')
      level++
      startLevel()
    } else {
      alert('Leider falsch! ðŸ˜¢')
      tries--
      $('#tries').textContent = `Versuch ${4 - tries}/3:`
      if (tries <= 0) {
        gameOver()
        return
      }
    }
  }

  function gameOver() {
    playAudio('/wwwm/over.mp3')
    $('#main-screen').style.display = 'none'
    $('#game-over').style.display = 'block'
  }

  function endGame() {
    // confirm
    if (!confirm('Bist du sicher, dass du das Spiel beenden mÃ¶chtest?')) {
      return
    }
    if (currentAudio) {
      currentAudio.pause()
      currentAudio = null
    }
    $('#main-screen').style.display = 'none'
    $('#intro-screen').style.display = 'block'
    $('#back-button').style.display = 'block'
  }
</script>

<!-- ================================================ SCARY STUFF ======================================== -->
<style>
  /* 20s cinematic intro without JS */
  #game-welcome .intro-stage {
    position: relative;
    width: 100%;
    height: 360px;
    display: flex;
    align-items: center;
    justify-content: center;
    perspective: 1400px;
    font-family: system-ui, sans-serif;
  }
  #game-welcome .intro-logo {
    width: 90%;
    max-width: 340px;
    filter: drop-shadow(0 0 3px #fdfd03) drop-shadow(0 0 10px #00bc8c);
    animation: wm-seq2 20s ease-in-out forwards;
    transform-origin: 50% 50%;
  }
  /* Redesigned clean sequence (20s, climax @50% â‰ˆ10s) */
  #game-welcome .intro-stage::before,
  #game-welcome .intro-stage::after {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
  }
  /* soft radial glow */
  #game-welcome .intro-stage::before {
    background: radial-gradient(
      circle at 50% 55%,
      rgba(253, 253, 3, 0.22),
      transparent 70%
    );
    opacity: 0;
    animation: glowPulse 20s ease-in-out forwards;
  }
  /* accent ring */
  #game-welcome .intro-stage::after {
    width: 74%;
    height: 74%;
    margin: auto;
    border: 2px solid rgba(0, 188, 140, 0);
    border-radius: 50%;
    transform: scale(0.4) rotate(0deg);
    box-shadow:
      0 0 0 0 rgba(253, 253, 3, 0),
      0 0 0 0 rgba(0, 188, 140, 0);
    animation: ringRise 20s ease-in-out forwards;
  }
  @keyframes wm-seq2 {
    0% {
      opacity: 0;
      transform: scale(0.35) rotateX(35deg) rotateZ(-140deg);
      filter: blur(4px) brightness(0.6);
    }
    6% {
      opacity: 1;
      transform: scale(0.55) rotateX(28deg) rotateZ(-90deg);
      filter: blur(2.5px) brightness(0.85);
    }
    14% {
      transform: scale(0.85) rotateX(18deg) rotateY(8deg) rotateZ(-30deg);
      filter: blur(1.5px) brightness(0.95);
    }
    22% {
      transform: scale(1) rotateX(10deg) rotateY(2deg) rotateZ(-5deg);
      filter: blur(1px) brightness(1.05);
    }
    32% {
      transform: scale(1.05) rotateX(6deg) rotateY(-4deg) rotateZ(2deg);
      filter: blur(0.8px) brightness(1.1);
    }
    40% {
      transform: scale(1.08) rotateX(4deg) rotateY(0deg) rotateZ(0deg);
      filter: blur(0.6px) brightness(1.12);
    }
    48% {
      transform: scale(1.12) rotateX(3deg) rotateY(-3deg) rotateZ(2deg);
      filter: blur(0.4px) brightness(1.18);
    }
    50% {
      /* CLIMAX */
      transform: scale(1.28) rotateX(2deg) rotateY(-2deg) rotateZ(4deg);
      filter: drop-shadow(0 0 5px #fdfd03) drop-shadow(0 0 20px #00bc8c)
        brightness(1.34);
      opacity: 1;
    }
    56% {
      transform: scale(1.18) rotateX(2deg) rotateY(0deg) rotateZ(0deg);
      filter: drop-shadow(0 0 3px #fdfd03) drop-shadow(0 0 12px #00bc8c)
        brightness(1.2);
    }
    66% {
      transform: scale(1.09) rotateX(1deg) rotateY(0deg);
      filter: brightness(1.08);
    }
    78% {
      transform: scale(1.05);
      filter: brightness(1.03) contrast(1.02);
    }
    88% {
      transform: scale(1.06) rotateZ(-2deg);
      opacity: 0.85;
      filter: brightness(0.98) saturate(0.95);
    }
    95% {
      transform: scale(1.04) rotateZ(-4deg);
      opacity: 0.55;
      filter: blur(1px) brightness(0.85);
    }
    100% {
      opacity: 0;
      transform: scale(1.02) rotateX(8deg) rotateZ(-8deg);
      filter: blur(2px) brightness(0.7);
    }
  }
  @keyframes glowPulse {
    0% {
      opacity: 0;
    }
    12% {
      opacity: 0.5;
    }
    50% {
      opacity: 0.85;
    }
    70% {
      opacity: 0.4;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes ringRise {
    0% {
      border-color: rgba(0, 188, 140, 0);
      transform: scale(0.3);
      opacity: 0;
    }
    18% {
      border-color: rgba(0, 188, 140, 0.25);
      transform: scale(0.75);
      opacity: 0.5;
    }
    32% {
      border-color: rgba(0, 188, 140, 0.35);
      transform: scale(0.95);
      opacity: 0.7;
    }
    50% {
      border-color: rgba(253, 253, 3, 0.9);
      box-shadow:
        0 0 8px 2px rgba(253, 253, 3, 0.9),
        0 0 22px 6px rgba(0, 188, 140, 0.55);
      transform: scale(1.05) rotate(25deg);
      opacity: 1;
    }
    60% {
      border-color: rgba(253, 253, 3, 0.55);
      box-shadow:
        0 0 6px 1px rgba(253, 253, 3, 0.6),
        0 0 14px 4px rgba(0, 188, 140, 0.4);
    }
    78% {
      border-color: rgba(0, 188, 140, 0.2);
      transform: scale(1.1) rotate(55deg);
      opacity: 0.45;
    }
    100% {
      border-color: rgba(0, 188, 140, 0);
      transform: scale(1.25) rotate(90deg);
      opacity: 0;
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
  }
  /* Respect reduced motion */
  @media (prefers-reduced-motion: reduce) {
    #game-welcome .intro-logo {
      animation: none !important;
      opacity: 1 !important;
      filter: none !important;
      transform: none !important;
    }
    #game-welcome .intro-stage {
      perspective: none;
    }
    #game-welcome .intro-stage::before,
    #game-welcome .intro-stage::after {
      display: none !important;
    }
  }

  /* ================= GAME OVER DRAMA ================= */
  #game-over {
    font-family: system-ui, 'Segoe UI', Arial, sans-serif;
    color: #eee;
  }
  .game-over-banner {
    position: absolute;
    inset: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }
  .game-over-backglow {
    position: absolute;
    width: 140%;
    height: 140%;
    background: radial-gradient(
        circle at 50% 50%,
        rgba(253, 253, 3, 0.15),
        transparent 60%
      ),
      radial-gradient(
        circle at 30% 40%,
        rgba(0, 188, 140, 0.25),
        transparent 70%
      ),
      radial-gradient(
        circle at 70% 60%,
        rgba(111, 0, 255, 0.28),
        transparent 70%
      );
    filter: blur(26px) brightness(1.15) saturate(1.2);
    opacity: 0;
    animation: goGlow 3.6s ease-in-out forwards;
  }
  .game-over-title {
    position: relative;
    font-size: 74px;
    letter-spacing: 4px;
    margin: 0;
    display: flex;
    gap: 4px;
    font-weight: 700;
    color: #ff2a2a;
    text-shadow:
      0 0 4px rgba(255, 0, 0, 0.9),
      0 0 12px rgba(255, 40, 40, 0.8),
      0 0 28px rgba(140, 0, 0, 0.9);
    filter: brightness(1.15) contrast(1.1);
    opacity: 0;
    transform: scale(0.65) rotateX(45deg) rotateZ(-25deg);
    animation: goTitle 1.2s 0.2s cubic-bezier(0.25, 0.9, 0.38, 1.4) forwards;
  }
  .game-over-title span {
    display: inline-block;
    animation: goLetter 2.4s ease-in-out forwards;
  }
  .game-over-title span:nth-child(1) {
    animation-delay: 0.05s;
  }
  .game-over-title span:nth-child(2) {
    animation-delay: 0.09s;
  }
  .game-over-title span:nth-child(3) {
    animation-delay: 0.13s;
  }
  .game-over-title span:nth-child(4) {
    animation-delay: 0.17s;
  }
  .game-over-title span:nth-child(5) {
    animation-delay: 0.29s;
  }
  .game-over-title span:nth-child(6) {
    animation-delay: 0.33s;
  }
  .game-over-title span:nth-child(7) {
    animation-delay: 0.37s;
  }
  .game-over-title span:nth-child(8) {
    animation-delay: 0.41s;
  }
  .game-over-title span:nth-child(9) {
    animation-delay: 0.45s;
  }
  .game-over-title .gap {
    width: 18px;
  }
  .final-prize {
    margin-top: 20px;
    font-size: 34px;
    font-weight: 600;
    letter-spacing: 2px;
    background: linear-gradient(90deg, #fff, #fdfd03 40%, #00bc8c 80%);
    -webkit-background-clip: text;
    color: transparent;
    filter: drop-shadow(0 0 4px rgba(253, 253, 3, 0.6))
      drop-shadow(0 0 10px rgba(0, 188, 140, 0.55));
    opacity: 0;
    transform: translateY(30px) scale(0.9);
    animation: goPrize 1s 1s ease-out forwards;
  }
  .game-over-banner.show .game-over-title {
    animation-play-state: running;
  }
  @keyframes goGlow {
    0% {
      opacity: 0;
      transform: scale(1.2) rotate(0deg);
    }
    35% {
      opacity: 0.9;
    }
    55% {
      opacity: 1;
    }
    100% {
      opacity: 0.15;
      transform: scale(1.4) rotate(25deg);
    }
  }
  @keyframes goTitle {
    0% {
      opacity: 0;
      transform: scale(0.4) rotateX(60deg) rotateZ(-50deg);
      filter: blur(6px) brightness(0.4);
    }
    55% {
      opacity: 1;
      transform: scale(1.08) rotateX(4deg) rotateZ(3deg);
      filter: blur(1px) brightness(1.3);
    }
    70% {
      transform: scale(1) rotateX(0deg) rotateZ(0deg);
      filter: blur(0.5px) brightness(1.15);
    }
    100% {
      opacity: 1;
      transform: scale(1.02);
      filter: blur(0.6px) brightness(1.05);
    }
  }
  @keyframes goLetter {
    0% {
      transform: translateY(80px) scale(0.3) rotate(-50deg);
      opacity: 0;
    }
    40% {
      opacity: 1;
    }
    60% {
      transform: translateY(-10px) scale(1.15) rotate(4deg);
    }
    80% {
      transform: translateY(4px) scale(0.98) rotate(-2deg);
    }
    100% {
      transform: translateY(0) scale(1) rotate(0deg);
      opacity: 1;
    }
  }
  @keyframes goPrize {
    0% {
      opacity: 0;
      transform: translateY(40px) scale(0.5);
      filter: blur(8px);
    }
    50% {
      opacity: 1;
      transform: translateY(-6px) scale(1.08);
      filter: blur(1px);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
      filter: blur(0.5px);
    }
  }
  @media (prefers-reduced-motion: reduce) {
    .game-over-backglow,
    .game-over-title,
    .game-over-title span,
    .final-prize {
      animation: none !important;
      opacity: 1 !important;
      transform: none !important;
      filter: none !important;
    }
  }
</style>
